# Generated by Django 4.0.4 on 2022-07-06 18:58

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('document', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBankData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account_no', models.IntegerField(unique=True)),
                ('bank_name', models.CharField(max_length=255)),
                ('bank_code', models.IntegerField()),
                ('bank_address', models.TextField()),
                ('wallet_balance', models.PositiveBigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UserDocuments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ctc', models.IntegerField()),
                ('aadhaar_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_aadhaar', to='document.document')),
                ('pan_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_pan', to='document.document')),
                ('salary_slips', models.ManyToManyField(related_name='user_salaryslips', to='document.document')),
                ('user_bank_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bank_details', to='users.userbankdata')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('username', models.CharField(max_length=255, null=True, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('profile_photo', models.ImageField(blank=True, upload_to='uploads/profile_photos/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_bank_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_bank_data', to='users.userbankdata')),
                ('user_documents', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_documents', to='users.userdocuments')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
    ]
